{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05E0\\u05D7\\u05DE\\u05D9 \\u05DE\\u05D5\\u05E0\\u05E7\\u05E7\\u05E7\\u05E7\\u05E7\\u05E7\\u05E7\\u05E7\\u05E7\\u05E7\\u05E7\\\\Documents\\\\\\u05DB\\u05D9\\u05EA\\u05D4 \\u05D9\\u05D3\\\\HouzzBootcamp\\\\my-app\\\\src\\\\components\\\\Edit.tsx\";\nimport React, { Component } from 'react';\nimport { musicalInstruments } from '../data/musicalInstruments';\nimport WithRouter from './WithRouter'; // interface EditProps {\n//   id: number;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditWithRouter = WithRouter(class Edit extends Component {\n  constructor() {\n    super(...arguments);\n    this.id = parseInt(this.props.params.id ? this.props.params.id : \"0\");\n    this.state = {\n      instrument: musicalInstruments[this.id].instrument,\n      description: musicalInstruments[this.id].description,\n      price: musicalInstruments[this.id].price\n    };\n  }\n\n  render() {\n    // const { id } = this.props;\n    const handleChange = (changedValue, field) => {\n      console.log(changedValue);\n\n      switch (field) {\n        case \"instrument\":\n          this.setState({\n            instrument: changedValue\n          });\n          break;\n\n        case \"description\":\n          this.setState({\n            description: changedValue\n          });\n          break;\n\n        case \"price\":\n          this.setState({\n            price: changedValue\n          });\n          break;\n      }\n    };\n\n    const writeToMusInstFile = () => {\n      musicalInstruments[id].instrument = this.state.instrument;\n      musicalInstruments[id].description = this.state.description;\n      musicalInstruments[id].price = this.state.price;\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: writeToMusInstFile,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.instrument,\n          onChange: e => handleChange(e.target.value, \"instrument\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.description,\n          onChange: e => handleChange(e.target.value, \"description\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: this.state.price,\n          onChange: e => handleChange(e.target.value, 'price')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n});\nexport default EditWithRouter;","map":{"version":3,"names":["React","Component","musicalInstruments","WithRouter","EditWithRouter","Edit","id","parseInt","props","params","state","instrument","description","price","render","handleChange","changedValue","field","console","log","setState","writeToMusInstFile","e","target","value"],"sources":["C:/Users/נחמי מונקקקקקקקקקקק/Documents/כיתה יד/HouzzBootcamp/my-app/src/components/Edit.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { musicalInstruments } from '../data/musicalInstruments';\r\nimport WithRouter, { IWithRouterProps } from './WithRouter';\r\n\r\n// interface EditProps {\r\n//   id: number;\r\n// }\r\n\r\nconst EditWithRouter = WithRouter(class Edit extends Component<IWithRouterProps, any> {\r\n  id = parseInt(this.props.params.id? this.props.params.id: \"0\");\r\n\r\n  // constructor(props: EditProps) {\r\n  //   super(props)\r\n  //   this.state = { instrument: musicalInstruments[props.id].instrument, description: musicalInstruments[props.id].description, price: musicalInstruments[props.id].price };\r\n  // }\r\n  state = { instrument: musicalInstruments[this.id].instrument, description: musicalInstruments[this.id].description, price: musicalInstruments[this.id].price };\r\n\r\n\r\n  render() {\r\n    // const { id } = this.props;\r\n    const handleChange = (changedValue: string, field: string) => {\r\n      console.log(changedValue);\r\n      switch (field) {\r\n        case \"instrument\":\r\n          this.setState({ instrument: changedValue });\r\n          break;\r\n        case \"description\":\r\n          this.setState({ description: changedValue });\r\n          break;\r\n        case \"price\":\r\n          this.setState({ price: changedValue });\r\n          break;\r\n      }\r\n    };\r\n\r\n    const writeToMusInstFile = () => {\r\n      musicalInstruments[id].instrument = this.state.instrument;\r\n      musicalInstruments[id].description = this.state.description;\r\n      musicalInstruments[id].price = this.state.price;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={writeToMusInstFile}>\r\n          <input type=\"text\" value={this.state.instrument} onChange={(e) => handleChange(e.target.value, \"instrument\")} />\r\n          <input type=\"text\" value={this.state.description} onChange={(e) => handleChange(e.target.value, \"description\")} />\r\n          <input type=\"number\" value={this.state.price} onChange={(e) => handleChange(e.target.value, 'price')} />\r\n          <input type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n})\r\nexport default EditWithRouter;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,OAAOC,UAAP,MAA6C,cAA7C,C,CAEA;AACA;AACA;;;AAEA,MAAMC,cAAc,GAAGD,UAAU,CAAC,MAAME,IAAN,SAAmBJ,SAAnB,CAAoD;EAAA;IAAA;IAAA,KACpFK,EADoF,GAC/EC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,MAAX,CAAkBH,EAAlB,GAAsB,KAAKE,KAAL,CAAWC,MAAX,CAAkBH,EAAxC,GAA4C,GAA7C,CADuE;IAAA,KAOpFI,KAPoF,GAO5E;MAAEC,UAAU,EAAET,kBAAkB,CAAC,KAAKI,EAAN,CAAlB,CAA4BK,UAA1C;MAAsDC,WAAW,EAAEV,kBAAkB,CAAC,KAAKI,EAAN,CAAlB,CAA4BM,WAA/F;MAA4GC,KAAK,EAAEX,kBAAkB,CAAC,KAAKI,EAAN,CAAlB,CAA4BO;IAA/I,CAP4E;EAAA;;EAUpFC,MAAM,GAAG;IACP;IACA,MAAMC,YAAY,GAAG,CAACC,YAAD,EAAuBC,KAAvB,KAAyC;MAC5DC,OAAO,CAACC,GAAR,CAAYH,YAAZ;;MACA,QAAQC,KAAR;QACE,KAAK,YAAL;UACE,KAAKG,QAAL,CAAc;YAAET,UAAU,EAAEK;UAAd,CAAd;UACA;;QACF,KAAK,aAAL;UACE,KAAKI,QAAL,CAAc;YAAER,WAAW,EAAEI;UAAf,CAAd;UACA;;QACF,KAAK,OAAL;UACE,KAAKI,QAAL,CAAc;YAAEP,KAAK,EAAEG;UAAT,CAAd;UACA;MATJ;IAWD,CAbD;;IAeA,MAAMK,kBAAkB,GAAG,MAAM;MAC/BnB,kBAAkB,CAACI,EAAD,CAAlB,CAAuBK,UAAvB,GAAoC,KAAKD,KAAL,CAAWC,UAA/C;MACAT,kBAAkB,CAACI,EAAD,CAAlB,CAAuBM,WAAvB,GAAqC,KAAKF,KAAL,CAAWE,WAAhD;MACAV,kBAAkB,CAACI,EAAD,CAAlB,CAAuBO,KAAvB,GAA+B,KAAKH,KAAL,CAAWG,KAA1C;IACD,CAJD;;IAMA,oBACE;MAAA,uBACE;QAAM,QAAQ,EAAEQ,kBAAhB;QAAA,wBACE;UAAO,IAAI,EAAC,MAAZ;UAAmB,KAAK,EAAE,KAAKX,KAAL,CAAWC,UAArC;UAAiD,QAAQ,EAAGW,CAAD,IAAOP,YAAY,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiB,YAAjB;QAA9E;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,KAAK,EAAE,KAAKd,KAAL,CAAWE,WAArC;UAAkD,QAAQ,EAAGU,CAAD,IAAOP,YAAY,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiB,aAAjB;QAA/E;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAO,IAAI,EAAC,QAAZ;UAAqB,KAAK,EAAE,KAAKd,KAAL,CAAWG,KAAvC;UAA8C,QAAQ,EAAGS,CAAD,IAAOP,YAAY,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiB,OAAjB;QAA3E;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;AA3CmF,CAArD,CAAjC;AA6CA,eAAepB,cAAf"},"metadata":{},"sourceType":"module"}